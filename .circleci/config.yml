version: 2.1
description: |
  Build a Docker application and push to an ECR repository.

executors:
  helm-executor:
    docker:
      - image: 'circleci/python:3'

orbs:
  gradle: circleci/gradle@2.2.0
  aws-cli: circleci/aws-cli@2.0.2
  aws-ecr: circleci/aws-ecr@7.0.0
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0
  helm: circleci/helm@1.2.0
  custom-orb: liatrio-poc/circleci-orb-poc@dev:alpha

parameters:
  aws-access-key-id:
    type: string
    default: AWS_ACCESS_KEY_ID
  aws-secret-access-key:
    type: string
    default: AWS_SECRET_ACCESS_KEY
  account-url:
    default: AWS_ECR_ACCOUNT_URL
    type: string
  region:
    type: string
    default: AWS_DEFAULT_REGION
  role-arn:
    type: string
    default: AWS_ASSUME_ROLE
  repo-name:
    type: env_var_name
    default: AWS_REPO

jobs:

  deploy-helm-chart:
    executor: aws-eks/python3
    parameters:
      app-name:
        default: spring-boot-kotlin
        type: string
      role-arn:
        default: AWS_ASSUME_ROLE
        type: string
      cluster-name:
        default: circleci-pipeline-poc
        type: string
    steps:
      - checkout
      - aws-cli/setup:
          configure-default-region: true
          configure-profile-region: true
      - aws-eks/install-aws-iam-authenticator
      - custom-orb/aws-assume-role
      - run:
          command: |
            
            aws eks update-kubeconfig --name <<parameters.cluster-name>>

            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod 700 kubectl
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh
            helm upgrade <<parameters.app-name>> ./<<parameters.app-name>>
            export POD_NAME=$(./kubectl get pods --namespace default -l "app.kubernetes.io/name=<<parameters.app-name>>,app.kubernetes.io/instance=<<parameters.app-name>>" -o jsonpath="{.items[0].metadata.name}")
            echo $POD_NAME
          name: Deploy to EKS

workflows:
  kotlin-application:
    jobs:
      - custom-orb/gradle-test:
          executor: custom-orb/gradle-executor
          cache_checksum_file: build.gradle.kts
          reports_path: build/reports/
          test_results_path: build/test-results/
      - custom-orb/build-push-docker-image:
          executor: aws-ecr/default
          repo-name: <<parameters.repo-name>>
          requires:
           - custom-orb/gradle-test
      - deploy-helm-chart:
          requires:
           - custom-orb/build-push-docker-image

