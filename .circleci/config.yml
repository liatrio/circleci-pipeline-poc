version: 2.1
description: |
  Build a Docker application and push to an ECR repository.

executors:
  helm-executor:
    docker:
      - image: 'circleci/python:3'

orbs:
  gradle: circleci/gradle@2.2.0
  aws-cli: circleci/aws-cli@2.0.2
  aws-ecr: circleci/aws-ecr@7.0.0
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0
  helm: circleci/helm@1.2.0
  custom-orb: liatrio-poc/circleci-orb-poc@dev:2b071ad

parameters:
  aws-access-key-id:
    type: string
    default: AWS_ACCESS_KEY_ID
  aws-secret-access-key:
    type: string
    default: AWS_SECRET_ACCESS_KEY
  account-url:
    default: AWS_ECR_ACCOUNT_URL
    type: string
  region:
    type: string
    default: AWS_DEFAULT_REGION
  role-arn:
    type: string
    default: AWS_ASSUME_ROLE
  repo:
    type: string
    default: calvin
  
workflows:
  kotlin-application:
    jobs:
      - custom-orb/gradle-test:
          executor: custom-orb/gradle-executor
          cache_checksum_file: build.gradle.kts
          reports_path: build/reports/
          test_results_path: build/test-results/
      - custom-orb/build-push-docker-image:
          executor: aws-ecr/default
          repo-name: $AWS_REPO
          requires:
           - custom-orb/gradle-test
      - custom-orb/deploy-helm-chart:
          requires:
           - custom-orb/build-push-docker-image
